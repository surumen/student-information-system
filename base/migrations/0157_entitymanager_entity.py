# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-09-18 07:01
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
from django.db import migrations, connection


def _find_entity_managers():
    with connection.cursor() as cursor:
        sql = " SELECT base_entitymanager.id as entitymanager_id, base_entitymanager.structure_id as structure_id,  base_entitymanager.entity_id " \
              " FROM base_entitymanager"
        cursor.execute(sql)
        return dictfetchall(cursor)


def _add_entity_manager_entity(entity_manager, entity_id):
    with connection.cursor() as cursor:
        sql = "UPDATE base_entitymanager set entity_id=%s where id=%s"
        cursor.execute(sql, [entity_id, entity_manager['entitymanager_id']])


def _find_structure_code(an_id):
    with connection.cursor() as cursor:
        sql = " SELECT base_structure.* " \
              " FROM base_structure where id = %s"
        cursor.execute(sql, [an_id])
        return dictfetchall(cursor)


def _find_entitites(acronym):
    with connection.cursor() as cursor:
        sql = " SELECT base_entityversion.id, base_entityversion.entity_id FROM base_entityversion where acronym = %s "
        cursor.execute(sql, [acronym])
        return dictfetchall(cursor)

def _find_all_entitites():
    with connection.cursor() as cursor:
        sql = " SELECT base_entityversion.id, base_entityversion.entity_id, base_entityversion.acronym " \
              " FROM base_entityversion " \
              " order by start_date desc"
        cursor.execute(sql)
        return dictfetchall(cursor)

def entity_manager_entities(apps, schema_editor):
    entity_managers = _find_entity_managers()
    all_entitites = _find_all_entitites()
    dict_enti = {}
    for ent in all_entitites:
        if not dict_enti.get(ent['acronym']):
            dict_enti[ent['acronym'].upper()] = ent['entity_id']

    for entity_manager in entity_managers:
        structure_acronym = None
        structures = _find_structure_code(entity_manager['structure_id'])
        for struct in structures:
            structure_acronym = struct['acronym']
            break

        if structure_acronym and structure_acronym in dict_enti:
            _add_entity_manager_entity(entity_manager, dict_enti[structure_acronym])


def dictfetchall(cursor):
    """Returns all rows from a cursor as a dict"""
    desc = cursor.description
    return [
        dict(zip([col[0] for col in desc], row))
        for row in cursor.fetchall()
        ]


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0156_offeryearentity_education_group_year'),
    ]

    operations = [
        migrations.AddField(
            model_name='entitymanager',
            name='entity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Entity'),
        ),
        migrations.RunPython(entity_manager_entities),

    ]
